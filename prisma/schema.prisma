generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                Int         @id @default(autoincrement())
  username          String      @unique
  name              String
  secondname        String
  password          String
  gener             Avatar
  type              UserType
  theme             ThemePage   @default(light)
  status            UserStatus
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  idUserCreated     Int
  idUserUpdated     Int
  Token             Token[]
  createdTranslates Translate[] @relation("CreateRelation")
  updatedTranslates Translate[] @relation("UpdateRelation")
}

enum Avatar {
  female
  male
  others
}

enum ThemePage {
  dark
  light
}

enum UserType {
  admin
  develop
}

enum UserStatus {
  ativo
  inativo
}

model Translate {
  id            Int      @id @default(autoincrement())
  keyword       String   @unique
  ptbr          String   @db.VarChar(255)
  enus          String   @db.VarChar(255)
  esch          String   @db.VarChar(255)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  idUserCreated Int
  idUserUpdated Int
  userCreated   User     @relation(name: "CreateRelation", fields: [idUserCreated], references: [id])
  userUpdated   User     @relation(name: "UpdateRelation", fields: [idUserUpdated], references: [id])

  @@index([idUserCreated])
  @@index([idUserUpdated])
}

model Token {
  accessToken         String   @unique
  accessTokenExpires  DateTime
  refreshToken        String   @unique
  refreshTokenExpires DateTime
  client              Client   @relation(fields: [clientName], references: [name])
  clientName          String
  user                User     @relation(fields: [username], references: [username])
  username            String
  scope               String
  revoked             Boolean  @default(false)

  @@index([clientName])
  @@index([username])
}

model Client {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  secret String
  tokens Token[]
}
